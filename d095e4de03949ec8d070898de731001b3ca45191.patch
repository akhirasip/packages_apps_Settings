From d095e4de03949ec8d070898de731001b3ca45191 Mon Sep 17 00:00:00 2001
From: Alex <mazdarider23@gmail.com>
Date: Sun, 5 Apr 2015 19:57:49 +0200
Subject: [PATCH] Settings - Partition information menu

Credit and Thanks to nobodyAtall

Change-Id: I4859db251883181947e0e96c3d4969a27da9de62
---
 AndroidManifest.xml                         |   8 ++
 res/drawable-hdpi/ic_dt_omniswitch.png      | Bin 0 -> 779 bytes
 res/drawable-hdpi/ic_headsup.png            | Bin 0 -> 405 bytes
 res/drawable-mdpi/ic_dt_omniswitch.png      | Bin 0 -> 569 bytes
 res/drawable-mdpi/ic_headsup.png            | Bin 0 -> 309 bytes
 res/drawable-xhdpi/ic_dt_omniswitch.png     | Bin 0 -> 1073 bytes
 res/drawable-xhdpi/ic_headsup.png           | Bin 0 -> 347 bytes
 res/drawable-xxhdpi/ic_headsup.png          | Bin 0 -> 567 bytes
 res/values/cr_strings.xml                   |   9 +++
 res/xml/device_info_memory.xml              |  10 +++
 res/xml/partition_info.xml                  |  50 ++++++++++++
 src/com/android/settings/PartitionInfo.java | 118 ++++++++++++++++++++++++++++
 12 files changed, 195 insertions(+)
 create mode 100644 res/drawable-hdpi/ic_dt_omniswitch.png
 create mode 100644 res/drawable-hdpi/ic_headsup.png
 create mode 100644 res/drawable-mdpi/ic_dt_omniswitch.png
 create mode 100644 res/drawable-mdpi/ic_headsup.png
 create mode 100644 res/drawable-xhdpi/ic_dt_omniswitch.png
 create mode 100644 res/drawable-xhdpi/ic_headsup.png
 create mode 100644 res/drawable-xxhdpi/ic_headsup.png
 create mode 100644 res/xml/partition_info.xml
 create mode 100644 src/com/android/settings/PartitionInfo.java

diff --git a/AndroidManifest.xml b/AndroidManifest.xml
index 4d126e8..9b60037 100644
--- a/AndroidManifest.xml
+++ b/AndroidManifest.xml
@@ -713,6 +713,14 @@
                 android:value="true" />
         </activity>
 
+        <activity android:name="PartitionInfo" android:label="@string/partition_info_title">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+                <category android:name="android.intent.category.DEFAULT" />
+                <category android:name="android.intent.category.VOICE_LAUNCH" />
+            </intent-filter>
+        </activity>
+
         <activity android:name="SettingsLicenseActivity"
                 android:label="@string/settings_license_activity_title"
                 android:theme="@android:style/Theme.Material.Light.Panel"
diff --git a/res/drawable-hdpi/ic_dt_omniswitch.png b/res/drawable-hdpi/ic_dt_omniswitch.png
new file mode 100644
index 0000000000000000000000000000000000000000..7176e7393f8f8215d5f99929482fc4214eec317b
GIT binary patch
literal 779
zcmV+m1N8ifP)<h;3K|Lk000e1NJLTq001xm001xu1^@s6R|5Hm00006VoOIv0RI60
z0RN!9r;`8x010qNS#tmY3ljhU3ljkVnw%H_000McNliru-V6u{3<yaZ?w|kw0+>le
zK~!ko?U}J_6hRcme>u}w8o4Hr6jtGyYb-2M$f<+~$F$}u!9Xk)0wV7I33C=!BN#{_
z7P++Rfk!~ZMzE7BE@)$sz(ELTndS<cce1RzcRP2xn^pH~7ItRmec#NynfKm8i4rCL
zYAo1vRz^Pq)-&eR@g1*|ssLs57T^N)oF=vpJn<dx!`uR7*4vk~LtNkSo=@s<rNHC?
z?ycRwd-3hv`%l&@Alv3(ih)r|L>H&D--+8!3o+!EfU}r^`?4zilxMp>!OzZtHQ(`m
zBvrm0)3)b3-s6n6%Q4VVM!y1fLTy#y^oKuGVg`E}@vfU8`QH#5-H4`ERR2oCaYulc
zqw{(Z{<S=hfPwFL$9b_ATZ7Q+i+KbT7NvkvKq=sV6rhY=QbyO(BB6|~N%)f63Tyxa
zWppDA@^a>H=PBSw0<0G)EWkM8-Oo*cM1{LRUBd2JXTKrQXDcewOd}4TB%-5?c7ZoQ
zC$JsrzzT39^vQSN6zB)Sl0)FcCI?PUfS>`KDWl&4L*P+@F-OYiULZ`qo@FMK#F>8r
zO-q~2K%%lSUcuZ1$dUKjl6VxVz=8PD!&&^GG6VS<@FfNEK{SD{vmDEn8OVPGRx`L%
ztH7b{1({U9i9CB^D41-!z@BA=VkF<VGDc8DFJv<vACP1_JoBH&g(qe7rp3w($N9A~
zdOfrqSH)JUPP`e@_m()|N?gtwgJmh2oyL?=c9O1WoPcWy`&F4<{ED;Nw&Zrz#s`K4
zjGTuy0$vtSK-)&Ze&}?#Z1m&erOJe8^Fe_Gw5;y|sRp}6AU~<7mgEP=mW0fUITJqz
zcBh5fQ*UA!piXqbH7j(1+ez{S+n;<5;AV!z!wFA`5+(k1`~uO+$L-%@--`eM002ov
JPDHLkV1hv$W}E;3

literal 0
HcmV?d00001

diff --git a/res/drawable-hdpi/ic_headsup.png b/res/drawable-hdpi/ic_headsup.png
new file mode 100644
index 0000000000000000000000000000000000000000..7b470b79d0306360de8b67552d3966fb2e96eebc
GIT binary patch
literal 405
zcmeAS@N?(olHy`uVBq!ia0vp^1|ZDA1|-9oezpTCwj^(N7l!{JxM1({$v_d#0*}aI
z1_r)EAj~ML;ne^XWH0gbb!ETLD8s7HBU)6Pz`($$<muuVl5y|tjQv@M0z{70U)Som
z;Av%HEmp&#UcUUDox`ypBkP|G`#kO~Y%VGPAnL;U@{zp9u9l!Dt2(<ZH{NHDeCPS#
z&k4)#b<dkrJomrqcb`^Vysz|m<wxEhAC7Vbu|~K$-uTSAdfryG53}krSQF}WUNC$7
zvk{vzXR-EH76k@I4hM$+(hI7N$Xhzcop{O`!4#aG_Ac>l$;;{k=KMSj3k|LJb~J66
zyp{dcfo{cy<$HYRFce;kec)H@Fo*p?fN?_o^C!s*cun*y+4)YdlxBUnt0DF|_lrA^
zRO+_95qi=JwSq~YAy3us_N_3+&7aHzcC#K3n<4ULx!KEr$Lkmi4y@}@6_Gw|eBI+G
s=N@UVdrO~A$?P$X)|ys4*=wylpQdqr%^|TwU;r|By85}Sb4q9e0B-i5ga7~l

literal 0
HcmV?d00001

diff --git a/res/drawable-mdpi/ic_dt_omniswitch.png b/res/drawable-mdpi/ic_dt_omniswitch.png
new file mode 100644
index 0000000000000000000000000000000000000000..a1037720c8a09af75e80c091ae4acea18e13e71a
GIT binary patch
literal 569
zcmV-90>=G`P)<h;3K|Lk000e1NJLTq001BW001Be1^@s6b9#F800006VoOIv0RI60
z0RN!9r;`8x010qNS#tmY3ljhU3ljkVnw%H_000McNliru-V6u{4F<Qk^5y^l0mey0
zK~z}7?Ux};12GhaKgI--F%lGd(;&bh7zR_jp}@k~u}jb-1qlTUf)FGpMi4WI1rQ_P
zSb`xa5-#9CV!EU$w_A_hf?$7gxn%wO`uBg=_c|Ejk1^71Kqxr}Yy-JI;y(g=f#=^Q
z5+Ib^1a?x~Xf5#k-Kc@lh{gATt(2W!DlV5k+ZT;ytOMHi8;hfW7Vrg(IV{%U%>te^
zHgBgRYY`56O-O)aq2!6Rp>3dKk}}q$87ptM{rIlu*NmSQZH_G<H0P(3|Da3!NC76s
zQxXsxC-c{ZXegkk0HI`ADA`C7R4CaHO0K5mz$LKg8c--%*2nGIg`age%O66?3ZR6N
z=Rg5i0HzJv3vdOrfhtf5Jinca04?H7C|L!bfP4%!1fB!WKXXl2*1^&OaB5Y_ZpZ_9
zp=1kKadE+JMsLOrbHJ4D>Ayu0cm>`&4h5b+>GBbVI@f0Vtmw`d2c>x(G<BTtHz}xF
z`Mz{$$1Tk>Q&Laz4dku2iFXIfkMt82)2R;J4Y=^#_Y$x^U;!Jk0wOLDX`&W&EPq@|
z+ZT;yak=yfETy>kTHyHyN&goV^rdp5kA)wAz_lz7@jvkm2q}SS<$Jj)00000NkvXX
Hu0mjfV4muP

literal 0
HcmV?d00001

diff --git a/res/drawable-mdpi/ic_headsup.png b/res/drawable-mdpi/ic_headsup.png
new file mode 100644
index 0000000000000000000000000000000000000000..f4c4724deddc2c2f0dd5b60815f3ecaae97779ab
GIT binary patch
literal 309
zcmeAS@N?(olHy`uVBq!ia0vp^3LwnE1|*BCs=fdzwj^(N7l!{JxM1({$v_d#0*}aI
z1_r)EAj~ML;ne^XWH0gbb!ETLD8s79KQ%#kHc;r0r;B4q#Np%w307tviHVl~f~~kD
zB_w8KX57EuYbpBo1d~n%*DMJMiHOV>4flC?cq(K+$aiJ38k|X!dSPPlsv(elLxQHb
z#LLik3B?YwYq^!?7y-?Ycq#bg#kU3GN8fK~;W9lqA83@*k3|ivQ6iU>O#TT^=15$)
zskyQ7A&02$_QZsQ4+_^9foAi#n>`Ep5@2{wvcNK7i-J_?ffdYdvJI;hHZ_XLUD4s}
uEIUx2vGS>*K<PnwsrDc99k0tturhF+SLuHzoVFV18wO8TKbLh*2~7Z{FKF!m

literal 0
HcmV?d00001

diff --git a/res/drawable-xhdpi/ic_dt_omniswitch.png b/res/drawable-xhdpi/ic_dt_omniswitch.png
new file mode 100644
index 0000000000000000000000000000000000000000..5d129092c63c3fdea4371aca5a7e04c56ea539e4
GIT binary patch
literal 1073
zcmV-11kU@3P)<h;3K|Lk000e1NJLTq002M$002M;1^@s6s%dfF00006VoOIv0RI60
z0RN!9r;`8x010qNS#tmY3ljhU3ljkVnw%H_000McNliru-V6u{4L9ay^4tIb1HMT_
zK~#9!?VC+V6k!<0e~LmRdn^xL6roFKhb{}AB05OmBprkTGcf5eEfJwpc{CeAG-OUG
zXcs|2YNV4U78UHJOVTA+^x{Fi1Y04jhYtHJ$l`qL?0l`xAC_fj_kCxc|NFep*ZV9a
zNRS{wf&^z4bzTQ5hTaA|04@Xj5j^`v;3qI^s@isF1RN8*A83ieBIbZ);FYOr`9KL!
z41E9?1=?e%%{kzyscP>7AwV(o$G~*Vw{!s*GF5HC?SOih!oR2i;Q<<fd08xfG(gmT
zz6K3^ubb^q=OBCs@Lia7vj-1C5bT0W8<YpGIC+Q$he^g9gf9SZfd$}4h^yNQWPm;(
zW$~L7@LW7r<r<(EdKd83X6znt*HpEQsB~POamm3QcbclU<;4gNI|zRxO5p)aRr>~X
zi@IAO<JAjXv-wW5V>M(Fwj6})_DaA%8)LT;Cvz`;KkH?z9RWuc*O$G7oFU+Y#q~q4
z1Xy{9ed39~ertdgnqo>oQ&<F?DkKCX1SA9`1SABUWi<FPiDKv}iN`-lf)Z5r*8%hZ
zi`7(ugV2E6Qacz9c)>DqpF45e0-q&C?okZ=dVsnAAjKlgYODwlb$lov#{ydYl6DRI
znTq>n1f>9(1=3PT^>g)a$==VJs`ff|M(`L$fscT$82U;nZ5AWh3S0#)Q7mkh;{f<Y
zu?V|UmU2(Z`$R0gz%eb@Pz-%e_Ue>k=nKFA#p+Ter%5@*&^IX-TW`wP)k;r&qR;?<
zap0biFz9iPc6pV?7eu?_9SF%@T@1(wzVX|(_#FsMRk7kuXav$?V7q`PewF3weGtA4
zSPM}2ats1%a^GkPkkE8pRwqoPfiH6ZXb6xMSSPw(ffiuBT21gmz^=S60?j9UpBIb$
z3i}fqH^|F8qZV^DA2YhUVHv^SVvViTK2vH?Pz-&a>iP;MOjUa+bM12SF@0M40d~S5
zpa6_WL>DJaOBi0j-BG?P0*-79kR4_eLoc1yj#Mewh+^nX6c0TfxiE|cKQ*Ai!XG;!
z<zq&e0-jYEFO=h)S0i|y(*e(CgG;A`fO)S3%$x$@3r@L7y-jMn1<chr0h3O}Q>Q>^
z+=pN$D&&CKsv<#Quh)xvi5Pi`eS+In5g;UN07Eq<e81bmsjFN-LfiW_upRbr*&$kS
zG9)B)<FOej1Z45hy65Q+6Ow%NMNkJgN!>Srca?OAS51JBkODe6xx`)mkcT!QY074t
r)$j8Zo3;M<bw-#VL4pJc&LaK;B61v?F&77P00000NkvXXu0mjfEU3j8

literal 0
HcmV?d00001

diff --git a/res/drawable-xhdpi/ic_headsup.png b/res/drawable-xhdpi/ic_headsup.png
new file mode 100644
index 0000000000000000000000000000000000000000..2911e574989bb9790634de71ceffae8f1ee1d783
GIT binary patch
literal 347
zcmeAS@N?(olHy`uVBq!ia0vp^4j|0I1|(Ny7TyC=Y)RhkE)4%caKYZ?lYt_f1s;*b
z3=DjSK$uZf!>a)($X?><>&kwgQHE8=FwHz?6Hw@dr;B4q#jUru4EdT2B-$SOAHE_G
zZqD{t)ux$Q{3T-*3*P}(s|vRKhZoLX6;NXrR~PomO1gCGd+f_k_MVL*DoRR=vTp0d
zzBv9+>t(=?8uR?Sn%fq1#$>C$<zmmcE|!yhp9yFS3b+#S#wKCX7mb>Io-QKVWg1lz
zuZY^kf4DYx|6b0rNqshKj4Qs|KG?i`iRI@?pGQ8P-Rb#v?Vi8<UARO0V=~`&6tmzQ
zE$yd17xtXLQ*`c+(1O69_5GV!89Z(<J>-AJt)!$B^@jD+T#3(bj>ScQba=Y@xvX<a
GXaWE}taxky

literal 0
HcmV?d00001

diff --git a/res/drawable-xxhdpi/ic_headsup.png b/res/drawable-xxhdpi/ic_headsup.png
new file mode 100644
index 0000000000000000000000000000000000000000..29494d7b390c04c2997da46368cb7b2b9424daa9
GIT binary patch
literal 567
zcmeAS@N?(olHy`uVBq!ia0vp^9w5xY1|&n@ZgvM!Y)RhkE)4%caKYZ?lYt_f1s;*b
z3=DjSK$uZf!>a)($X?><>&kwgQHIrkb>WwzQ49=>M?75|Ln>~)y=Cux*g@vl$M;7w
z{x(l8Eh_)u%3;M_%gDE{v8lsb{QEkm`z_5*wT6!#Xcq`{Yvkq#x6gT?;JHWYZR|XD
zBh&g>{N>Xh*Rgjk(&!Qjv1;CT@9Hs;m>oPh%z+Ec-XD0p;r8h+zb@{&+sx}4%_gw2
zBsWMF@XIg>hbu5|X}Idp7`AGTOz4it#lj0YJRF#WCN!|9C@^Zm7^Ykr*;WBDO~#DJ
zT6Qj)afZ8u{f+RqMYWGgmY%YEnjG->`XX;dtL8ds3#Buw+}Law%@610KeJ+c%OHLr
ztieIEGWN|iz8iiHf*aU!Sbm9S|2>v&x7D0mP~)o4u4kQ($~_x1L;td#nq<4ks?jd{
zYx)7v4KF#*aqM96d-G(&HL;Wv+k1N6G}q4L*|&pF{i1xyY1fxYQSW~AKjmZWbbvdT
z(?byAZcd;Vv^p5?+0>jr^7YXCb^88|%)6D7?h4NdPq_Z?dsL&*r%fj{3;OJ@h9yS_
zBvtpU+|26w#P#rz&3e;z_HEzz_^{OE9ZABxn$J!fieKodnH<>R+4x**??R3jj23Bq
rtDZEa_c*VWyP)Rh8Ypsfat%YjYV>aXXD*t+C}!|<^>bP0l+XkKLbc+(

literal 0
HcmV?d00001

diff --git a/res/xml/device_info_memory.xml b/res/xml/device_info_memory.xml
index 38cc94a..30107c6 100644
--- a/res/xml/device_info_memory.xml
+++ b/res/xml/device_info_memory.xml
@@ -20,5 +20,15 @@
         settings:keywords="@string/keywords_storage">
 
 <!-- Preference categories are dynamically created based on the list of available storage volumes -->
+    <!-- Partition info -->
+
+        <Preference
+            android:icon="@drawable/ic_tab_selected_sdcard"
+            android:title="@string/partition_info_title">
+        <intent
+            android:action="com.android.action.MAIN"
+            android:targetPackage="com.android.settings"
+            android:targetClass="com.android.settings.PartitionInfo" />
+        </Preference>
 
 </PreferenceScreen>
diff --git a/res/xml/partition_info.xml b/res/xml/partition_info.xml
new file mode 100644
index 0000000..e686f1c
--- /dev/null
+++ b/res/xml/partition_info.xml
@@ -0,0 +1,50 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2008 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+  
+          http://www.apache.org/licenses/LICENSE-2.0
+  
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+
+<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android"
+        android:title="@string/partition_info_title">
+
+    <!-- /System info -->
+    <Preference android:key="system_part_info" 
+        android:title="@string/partition_info_system"
+        android:summary="@string/status_unavailable"
+        />
+       
+    <!-- /Data info -->
+    <Preference android:key="data_part_info" 
+        android:title="@string/partition_info_data"
+        android:summary="@string/status_unavailable"
+        />
+
+    <!-- /cache info -->
+    <Preference android:key="cache_part_info" 
+        android:title="@string/partition_info_cache"
+        android:summary="@string/status_unavailable"
+        />
+		        
+    <!-- SDCard info (fat) -->
+    <Preference android:key="sdcard_part_info_fat" 
+        android:title="@string/partition_info_sdcard"
+        android:summary="@string/status_unavailable"
+        />
+		
+    <!-- SDCard info (ext) -->
+    <Preference android:key="sdcard_part_info_ext" 
+        android:title="@string/partition_info_sdext"
+        android:summary="@string/status_unavailable"
+        />
+
+</PreferenceScreen>
diff --git a/src/com/android/settings/PartitionInfo.java b/src/com/android/settings/PartitionInfo.java
new file mode 100644
index 0000000..f7a1452
--- /dev/null
+++ b/src/com/android/settings/PartitionInfo.java
@@ -0,0 +1,118 @@
+/*
+ * Copyright (C) 2008 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.android.settings;
+
+import android.content.ComponentName;
+import android.content.Intent;
+import android.content.pm.PackageManager;
+import android.content.pm.ResolveInfo;
+import android.os.Build;
+import android.os.Bundle;
+import android.os.StatFs;
+import android.os.SystemClock;
+import android.os.SystemProperties;
+import android.preference.Preference;
+import android.preference.PreferenceActivity;
+import android.preference.PreferenceGroup;
+import android.preference.PreferenceScreen;
+import android.provider.Settings;
+import android.text.format.Formatter;
+import android.util.Log;
+import android.view.MotionEvent;
+
+import java.io.BufferedReader;
+import java.io.File;
+import java.io.FileReader;
+import java.io.IOException;
+import java.util.List;
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
+
+public class PartitionInfo extends PreferenceActivity {
+    private static final String TAG = "PartitionInfo";
+    private static final String SYSTEM_PART_SIZE = "system_part_info";
+    private static final String DATA_PART_SIZE = "data_part_info";
+    private static final String CACHE_PART_SIZE = "cache_part_info";
+    private static final String SDCARDFAT_PART_SIZE = "sdcard_part_info_fat";
+    private static final String SDCARDEXT_PART_SIZE = "sdcard_part_info_ext";
+
+    private Preference mSystemPartSize;
+    private Preference mDataPartSize;
+    private Preference mCachePartSize;
+    private Preference mSDCardPartFATSize;
+    private Preference mSDCardPartEXTSize;
+    private Preference mDeviceName;
+
+    private boolean extfsIsMounted = false;
+
+    @Override
+    protected void onCreate(Bundle icicle) {
+        super.onCreate(icicle);
+
+        addPreferencesFromResource(R.xml.partition_info);
+
+        PreferenceScreen prefSet = getPreferenceScreen();
+
+    	mSystemPartSize        = (Preference) prefSet.findPreference(SYSTEM_PART_SIZE);
+    	mDataPartSize          = (Preference) prefSet.findPreference(DATA_PART_SIZE);
+    	mCachePartSize         = (Preference) prefSet.findPreference(CACHE_PART_SIZE);
+    	mSDCardPartFATSize     = (Preference) prefSet.findPreference(SDCARDFAT_PART_SIZE);
+    	mSDCardPartEXTSize     = (Preference) prefSet.findPreference(SDCARDEXT_PART_SIZE);
+
+        if (fileExists("/dev/block/mmcblk0p2") == true) {
+	    Log.i(TAG, "sd: ext partition mounted");
+            extfsIsMounted = true;
+	} else {
+            Log.i(TAG, "sd: ext partition not mounted");
+	}
+    	try {
+    	    mSystemPartSize.setSummary(ObtainFSPartSize    ("/system"));
+    	    mDataPartSize.setSummary(ObtainFSPartSize      ("/data"));
+    	    mCachePartSize.setSummary(ObtainFSPartSize     ("/cache"));
+    	    mSDCardPartFATSize.setSummary(ObtainFSPartSize ("/storage/sdcard0"));
+
+    	    if (extfsIsMounted == true) {
+                mSDCardPartEXTSize.setSummary(ObtainFSPartSize ("/sd-ext"));
+            } else {
+                mSDCardPartEXTSize.setEnabled(false);
+            }
+
+    	} catch (IllegalArgumentException e) {
+    	  e.printStackTrace();
+    	}
+
+    }
+
+    private String ObtainFSPartSize(String PartitionPath) {
+    	String retstr;
+    	File extraPath = new File(PartitionPath);
+    	StatFs extraStat = new StatFs(extraPath.getPath());
+    	long eBlockSize = extraStat.getBlockSize();
+    	long eTotalBlocks = extraStat.getBlockCount();
+    	retstr = Formatter.formatFileSize(this, (eTotalBlocks * eBlockSize) - (extraStat.getAvailableBlocks() * eBlockSize));
+    	retstr += "  " + getResources().getString(R.string.partition_info_used_of) + "  ";
+    	retstr += Formatter.formatFileSize(this, eTotalBlocks * eBlockSize);
+    	return retstr;
+    }
+
+    public boolean fileExists(String filename) {
+    	File f = new File(filename);
+    	return f.exists();
+    }
+
+}
+
